// <auto-generated />
using System;
using ArtFusionStudio.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArtFusionStudio.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240418095753_RemoveProperty")]
    partial class RemoveProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtFusionStudio.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PathD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Iphone",
                            PathD = "M17.05 20.28c-.98.95-2.05.8-3.08.35c-1.09-.46-2.09-.48-3.24 0c-1.44.62-2.2.44-3.06-.35C2.79 15.25 3.51 7.59 9.05 7.31c1.35.07 2.29.74 3.08.8c1.18-.24 2.31-.93 3.57-.84c1.51.12 2.65.72 3.4 1.8c-3.12 1.87-2.38 5.98.48 7.13c-.57 1.5-1.31 2.99-2.54 4.09zM12.03 7.25c-.15-2.23 1.66-4.07 3.74-4.25c.29 2.58-2.34 4.5-3.74 4.25"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Huawei",
                            PathD = "M3.67 6.14S1.82 7.91 1.72 9.78v.35c.08 1.51 1.22 2.4 1.22 2.4c1.83 1.79 6.26 4.04 7.3 4.55c0 0 .06.03.1-.01l.02-.04v-.04C7.52 10.8 3.67 6.14 3.67 6.14M9.65 18.6c-.02-.08-.1-.08-.1-.08l-7.38.26c.8 1.43 2.15 2.53 3.56 2.2c.96-.25 3.16-1.78 3.88-2.3c.06-.05.04-.09.04-.09zm.08-.78C6.49 15.63.21 12.28.21 12.28c-.15.46-.2.9-.21 1.3v.07c0 1.07.4 1.82.4 1.82c.8 1.69 2.34 2.2 2.34 2.2c.7.3 1.4.31 1.4.31c.12.02 4.4 0 5.54 0c.05 0 .08-.05.08-.05v-.06c0-.03-.03-.05-.03-.05M9.06 3.19a3.42 3.42 0 0 0-2.57 3.15v.41c.03.6.16 1.05.16 1.05c.66 2.9 3.86 7.65 4.55 8.65c.05.05.1.03.1.03a.1.1 0 0 0 .06-.1c1.06-10.6-1.11-13.42-1.11-13.42c-.32.02-1.19.23-1.19.23m8.299 2.27s-.49-1.8-2.44-2.28c0 0-.57-.14-1.17-.22c0 0-2.18 2.81-1.12 13.43c.01.07.06.08.06.08c.07.03.1-.03.1-.03c.72-1.03 3.9-5.76 4.55-8.64c0 0 .36-1.4.02-2.34m-2.92 13.07s-.07 0-.09.05c0 0-.01.07.03.1c.7.51 2.85 2 3.88 2.3c0 0 .16.05.43.06h.14c.69-.02 1.9-.37 3-2.26l-7.4-.25zm7.83-8.41c.14-2.06-1.94-3.97-1.94-3.98c0 0-3.85 4.66-6.67 10.8c0 0-.03.08.02.13l.04.01h.06c1.06-.53 5.46-2.77 7.28-4.54c0 0 1.15-.93 1.21-2.42m1.52 2.14s-6.28 3.37-9.52 5.55c0 0-.05.04-.03.11c0 0 .03.06.07.06c1.16 0 5.56 0 5.67-.02c0 0 .57-.02 1.27-.29c0 0 1.56-.5 2.37-2.27c0 0 .73-1.45.17-3.14"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sony",
                            PathD = "M8.55 9.888c.921 0 1.658.23 2.221.742c.385.349.6.846.594 1.367a1.908 1.908 0 0 1-.594 1.373c-.527.484-1.348.742-2.22.742c-.873 0-1.68-.258-2.215-.742a1.808 1.808 0 0 1-.603-1.373c0-.518.218-1.015.603-1.367c.5-.454 1.384-.742 2.214-.742m.003 3.67c.461 0 .888-.161 1.188-.458c.3-.3.433-.66.433-1.103c0-.424-.148-.821-.433-1.103c-.294-.29-.733-.454-1.188-.454s-.893.163-1.19.454c-.285.282-.434.679-.434 1.103a1.56 1.56 0 0 0 .434 1.103c.297.294.733.457 1.19.457M3.712 11.59c.16.042.315.094.466.163a1.352 1.352 0 0 1 .379.258c.197.206.309.482.306.767a.964.964 0 0 1-.379.778a2.066 2.066 0 0 1-.709.349a3.723 3.723 0 0 1-1.194.17c-.352 0-.546-.041-.813-.097l-.077-.016a4.72 4.72 0 0 1-.858-.278a.07.07 0 0 0-.042-.012a.084.084 0 0 0-.082.084v.203H.121v-1.478h.524a.756.756 0 0 0 .137.418c.212.26.44.36.657.44c.367.12.752.184 1.136.196c.553 0 .876-.134.946-.163l.009-.004l.006-.002c.062-.023.312-.114.312-.392c0-.274-.234-.334-.387-.373l-.022-.005c-.17-.046-.562-.088-.99-.133l-.152-.016a13.85 13.85 0 0 1-1.197-.175c-.498-.11-.694-.292-.816-.405l-.008-.008a1.02 1.02 0 0 1-.276-.7c0-.496.34-.796.758-.98a3.63 3.63 0 0 1 1.439-.289c.82.003 1.487.27 1.727.394c.097.052.145-.012.145-.06v-.149h.527v1.288h-.472a.906.906 0 0 0-.294-.491a1.289 1.289 0 0 0-.297-.179a3.114 3.114 0 0 0-1.251-.245c-.443 0-.867.085-1.08.215c-.132.082-.2.185-.2.306c0 .173.146.242.22.263c.196.06.632.103.971.137l.204.021c.327.033 1.012.124 1.315.2m18.167-.997v-.479H24v.47h-.476c-.172 0-.242.033-.372.179l-1.427 1.63a.098.098 0 0 0-.019.07v.742a1.106 1.106 0 0 0 .012.103a.15.15 0 0 0 .1.09a.937.937 0 0 0 .13.01h.486v.47H19.86v-.47h.46a.934.934 0 0 0 .13-.01a.163.163 0 0 0 .104-.09a.563.563 0 0 0 .009-.1v-.742c0-.025 0-.025-.033-.064a606.76 606.76 0 0 0-1.412-1.603c-.076-.079-.206-.206-.406-.206h-.458v-.47h2.588v.47h-.312c-.07 0-.118.07-.058.146l.879 1.051c.009.012.015.012.027.003c.012-.009.894-1.045.9-1.054a.091.091 0 0 0-.018-.128a.11.11 0 0 0-.06-.018zm-6.284-.003h.485c.221 0 .26.085.263.291l.028 1.566l-2.582-2.324h-1.845v.47h.412c.297 0 .318.164.318.31v2.213c0 .128.001.295-.182.295h-.506v.467h2.164v-.47h-.528c-.212 0-.22-.097-.224-.303v-1.882l2.973 2.651h.757l-.04-2.996c.004-.218.019-.291.243-.291h.473v-.47h-2.209Z"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Samsung",
                            PathD = "m19.817 10.28l.046 2.694h-.023l-.78-2.693h-1.283v3.392h.848l-.046-2.785h.023l.836 2.785h1.227v-3.392zm-16.15 0l-.641 3.428h.928l.47-3.118h.023l.459 3.118h.916l-.63-3.427zm5.181 0l-.424 2.614h-.023l-.424-2.613H6.58l-.069 3.427h.86l.023-3.083h.011l.573 3.083h.871l.573-3.083h.023l.023 3.083h.86l-.08-3.427zm-7.266 2.454a.48.48 0 0 1 .011.252c-.023.114-.103.229-.332.229c-.218 0-.344-.126-.344-.31v-.332H0v.264c0 .768.607.997 1.25.997c.618 0 1.134-.218 1.214-.78c.046-.298.012-.492 0-.561c-.16-.722-1.467-.929-1.559-1.33a.492.492 0 0 1 0-.183c.023-.115.104-.23.31-.23c.206 0 .32.127.32.31v.206h.86v-.24c0-.745-.676-.86-1.157-.86c-.608 0-1.112.206-1.204.757a1.04 1.04 0 0 0 .012.458c.137.71 1.364.917 1.536 1.352m11.152 0c.034.08.022.184.011.253c-.023.114-.103.229-.332.229c-.218 0-.344-.126-.344-.31v-.332h-.917v.264c0 .756.596.985 1.238.985c.619 0 1.123-.206 1.203-.779c.046-.298.012-.481 0-.562c-.137-.71-1.433-.928-1.524-1.318a.488.488 0 0 1 0-.183c.023-.115.103-.23.31-.23c.194 0 .32.127.32.31v.206h.848v-.24c0-.745-.665-.86-1.146-.86c-.607 0-1.1.195-1.192.757c-.023.149-.023.286.012.458c.137.71 1.34.905 1.513 1.352m2.888.459c.24 0 .31-.16.332-.252c.012-.035.012-.092.012-.126V10.28h.87v2.464c0 .069 0 .195-.01.23c-.058.641-.562.847-1.193.847c-.63 0-1.134-.206-1.192-.848c0-.034-.011-.16-.011-.229V10.28h.87v2.533c0 .046 0 .091.012.126c0 .091.07.252.31.252m7.152-.034c.252 0 .332-.16.355-.253c.011-.034.011-.091.011-.126v-.493h-.355v-.504H24v.917c0 .069 0 .115-.011.23c-.058.63-.597.847-1.204.847s-1.146-.217-1.203-.848c-.012-.114-.012-.16-.012-.229v-1.444c0-.057.012-.172.012-.23c.08-.641.596-.847 1.203-.847s1.135.206 1.203.848c.012.103.012.229.012.229v.115h-.86v-.195s0-.08-.011-.126c-.012-.08-.08-.252-.344-.252c-.252 0-.32.16-.344.252c-.011.045-.011.103-.011.16v1.57c0 .046 0 .092.011.126c0 .092.092.253.333.253"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Nokia",
                            PathD = "M16.59 9.348v5.304h.796V9.348Zm-8.497-.09c-1.55 0-2.752 1.127-2.752 2.742c0 1.687 1.202 2.742 2.752 2.742c1.55 0 2.754-1.055 2.751-2.742a2.72 2.72 0 0 0-2.751-2.742M10.05 12c0 1.195-.876 1.987-1.957 1.987c-1.082 0-1.958-.792-1.958-1.987c0-1.174.876-1.987 1.958-1.987c1.08 0 1.957.813 1.957 1.987M0 9.176v5.476h.812v-3.619l4.218 3.79v-1.135zM11.442 12l2.952 2.652h1.184L12.622 12l2.956-2.652h-1.184ZM24 14.652h-.875l-.64-1.175h-2.898l-.64 1.175h-.875l1.06-1.958h2.937l-1.465-2.72l.432-.798Z"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Аксесоари",
                            PathD = "M13.75 2A2.25 2.25 0 0 1 16 4.25V11h-.25A2.75 2.75 0 0 0 13 13.75v.3a2.5 2.5 0 0 0-2 2.45V18H8.75a.75.75 0 0 0 0 1.5H11v2c0 .171.017.338.05.5h-4.8A2.25 2.25 0 0 1 4 19.75V4.25A2.25 2.25 0 0 1 6.25 2zM14 13.75V15h-.5a1.5 1.5 0 0 0-1.5 1.5v5a1.5 1.5 0 0 0 1.5 1.5h8a1.5 1.5 0 0 0 1.5-1.5v-5a1.5 1.5 0 0 0-1.5-1.5H21v-1.25A1.75 1.75 0 0 0 19.25 12h-3.5A1.75 1.75 0 0 0 14 13.75m1.5 0a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25V15h-4z"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Персонализирани",
                            PathD = "M17.5 12a1.5 1.5 0 0 1-1.5-1.5A1.5 1.5 0 0 1 17.5 9a1.5 1.5 0 0 1 1.5 1.5a1.5 1.5 0 0 1-1.5 1.5m-3-4A1.5 1.5 0 0 1 13 6.5A1.5 1.5 0 0 1 14.5 5A1.5 1.5 0 0 1 16 6.5A1.5 1.5 0 0 1 14.5 8m-5 0A1.5 1.5 0 0 1 8 6.5A1.5 1.5 0 0 1 9.5 5A1.5 1.5 0 0 1 11 6.5A1.5 1.5 0 0 1 9.5 8m-3 4A1.5 1.5 0 0 1 5 10.5A1.5 1.5 0 0 1 6.5 9A1.5 1.5 0 0 1 8 10.5A1.5 1.5 0 0 1 6.5 12M12 3a9 9 0 0 0-9 9a9 9 0 0 0 9 9a1.5 1.5 0 0 0 1.5-1.5c0-.39-.15-.74-.39-1c-.23-.27-.38-.62-.38-1a1.5 1.5 0 0 1 1.5-1.5H16a5 5 0 0 0 5-5c0-4.42-4.03-8-9-8"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Case"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charger"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ImageExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("ImageExtensions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Extension = "png"
                        },
                        new
                        {
                            Id = 2,
                            Extension = "jpg"
                        },
                        new
                        {
                            Id = 3,
                            Extension = "jpeg"
                        },
                        new
                        {
                            Id = 4,
                            Extension = "bmp"
                        },
                        new
                        {
                            Id = 5,
                            Extension = "webp"
                        },
                        new
                        {
                            Id = 6,
                            Extension = "tif"
                        },
                        new
                        {
                            Id = 7,
                            Extension = "tiff"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Orders.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Orders.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductURL")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TotalVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Coupon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountCode = "BANGO",
                            DiscountPercentage = 99m,
                            EndDate = new DateTime(2042, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            StartDate = new DateTime(2024, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DiscountCode = "WXYZ123",
                            DiscountPercentage = 49m,
                            EndDate = new DateTime(2024, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 27,
                            StartDate = new DateTime(2024, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DiscountCode = "MNBVCXZ",
                            DiscountPercentage = 26m,
                            EndDate = new DateTime(2024, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 13,
                            StartDate = new DateTime(2024, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            DiscountCode = "ASDFQWE",
                            DiscountPercentage = 68m,
                            EndDate = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 34,
                            StartDate = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            DiscountCode = "POIUYTR",
                            DiscountPercentage = 12m,
                            EndDate = new DateTime(2025, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 25,
                            StartDate = new DateTime(2025, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            DiscountCode = "QWERTYU",
                            DiscountPercentage = 45m,
                            EndDate = new DateTime(2025, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            StartDate = new DateTime(2025, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            DiscountCode = "FGHJKLP",
                            DiscountPercentage = 52m,
                            EndDate = new DateTime(2025, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 17,
                            StartDate = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            DiscountCode = "ZXCVBNM",
                            DiscountPercentage = 18m,
                            EndDate = new DateTime(2025, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 8,
                            StartDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            DiscountCode = "UIOPGFD",
                            DiscountPercentage = 34m,
                            EndDate = new DateTime(2025, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 29,
                            StartDate = new DateTime(2025, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            DiscountCode = "KJHGFDS",
                            DiscountPercentage = 63m,
                            EndDate = new DateTime(2025, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 10,
                            StartDate = new DateTime(2025, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            DiscountCode = "MNBVCXZ",
                            DiscountPercentage = 77m,
                            EndDate = new DateTime(2026, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 19,
                            StartDate = new DateTime(2026, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            DiscountCode = "LKJHGFDS",
                            DiscountPercentage = 26m,
                            EndDate = new DateTime(2026, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 12,
                            StartDate = new DateTime(2026, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            DiscountCode = "QAZWSX",
                            DiscountPercentage = 33m,
                            EndDate = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            StartDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            DiscountCode = "EDCRFV",
                            DiscountPercentage = 55m,
                            EndDate = new DateTime(2024, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 14,
                            StartDate = new DateTime(2024, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            DiscountCode = "TGBYHN",
                            DiscountPercentage = 22m,
                            EndDate = new DateTime(2024, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 15,
                            StartDate = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            DiscountCode = "YHNJUM",
                            DiscountPercentage = 71m,
                            EndDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 6,
                            StartDate = new DateTime(2024, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            DiscountCode = "IKJUHY",
                            DiscountPercentage = 45m,
                            EndDate = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 19,
                            StartDate = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            DiscountCode = "LOIKUJ",
                            DiscountPercentage = 83m,
                            EndDate = new DateTime(2025, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 18,
                            StartDate = new DateTime(2024, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            DiscountCode = "POKJNH",
                            DiscountPercentage = 29m,
                            EndDate = new DateTime(2025, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 9,
                            StartDate = new DateTime(2024, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            DiscountCode = "WSXEDC",
                            DiscountPercentage = 61m,
                            EndDate = new DateTime(2025, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 20,
                            StartDate = new DateTime(2024, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            DiscountCode = "RFVTGB",
                            DiscountPercentage = 37m,
                            EndDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 21,
                            StartDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            DiscountCode = "YHNUJM",
                            DiscountPercentage = 76m,
                            EndDate = new DateTime(2026, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 22,
                            StartDate = new DateTime(2024, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            DiscountCode = "IKMNHJ",
                            DiscountPercentage = 41m,
                            EndDate = new DateTime(2026, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            StartDate = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            DiscountCode = "UJNMKI",
                            DiscountPercentage = 88m,
                            EndDate = new DateTime(2026, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 24,
                            StartDate = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            DiscountCode = "NHYUJM",
                            DiscountPercentage = 53m,
                            EndDate = new DateTime(2026, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 25,
                            StartDate = new DateTime(2025, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            DiscountCode = "BHJUYG",
                            DiscountPercentage = 19m,
                            EndDate = new DateTime(2026, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 26,
                            StartDate = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            DiscountCode = "YBGTVF",
                            DiscountPercentage = 32m,
                            EndDate = new DateTime(2026, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 7,
                            StartDate = new DateTime(2025, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            DiscountCode = "NJKIMH",
                            DiscountPercentage = 68m,
                            EndDate = new DateTime(2027, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 11,
                            StartDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            DiscountCode = "THYUJM",
                            DiscountPercentage = 47m,
                            EndDate = new DateTime(2027, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 17,
                            StartDate = new DateTime(2025, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            DiscountCode = "OLKIUJ",
                            DiscountPercentage = 75m,
                            EndDate = new DateTime(2027, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 13,
                            StartDate = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            DiscountCode = "POIUYT",
                            DiscountPercentage = 22m,
                            EndDate = new DateTime(2027, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 31,
                            StartDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            DiscountCode = "RFVGBH",
                            DiscountPercentage = 88m,
                            EndDate = new DateTime(2028, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 32,
                            StartDate = new DateTime(2025, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            DiscountCode = "QAZWSX",
                            DiscountPercentage = 41m,
                            EndDate = new DateTime(2028, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 33,
                            StartDate = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            DiscountCode = "EDCVFR",
                            DiscountPercentage = 59m,
                            EndDate = new DateTime(2028, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 34,
                            StartDate = new DateTime(2025, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            DiscountCode = "OKMUNY",
                            DiscountPercentage = 16m,
                            EndDate = new DateTime(2028, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            StartDate = new DateTime(2025, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            DiscountCode = "PLKIJU",
                            DiscountPercentage = 73m,
                            EndDate = new DateTime(2028, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 36,
                            StartDate = new DateTime(2026, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            DiscountCode = "BVCFRT",
                            DiscountPercentage = 28m,
                            EndDate = new DateTime(2029, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 37,
                            StartDate = new DateTime(2026, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            DiscountCode = "IKUJHY",
                            DiscountPercentage = 64m,
                            EndDate = new DateTime(2029, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 38,
                            StartDate = new DateTime(2026, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            DiscountCode = "QAZXSW",
                            DiscountPercentage = 37m,
                            EndDate = new DateTime(2029, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 39,
                            StartDate = new DateTime(2026, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            DiscountCode = "GBHNYU",
                            DiscountPercentage = 52m,
                            EndDate = new DateTime(2029, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 40,
                            StartDate = new DateTime(2026, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            DiscountCode = "RFVGTB",
                            DiscountPercentage = 49m,
                            EndDate = new DateTime(2029, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 41,
                            StartDate = new DateTime(2026, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            DiscountCode = "LGBTV",
                            DiscountPercentage = 61m,
                            EndDate = new DateTime(2030, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 42,
                            StartDate = new DateTime(2026, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.CaseMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("CaseMaterial");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Силикон"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Дърво"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Плат"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Силикон"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Пластмаса"
                        },
                        new
                        {
                            Id = 6,
                            Name = "TPU"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Гума"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Метал"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Поликарбон"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.CaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("CaseType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Портфейл"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Само гръб"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Скелет"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Вертикален"
                        },
                        new
                        {
                            Id = 5,
                            Name = "С батерия"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ръчен"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Удароустойчив"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Водоустойчив"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Чанта"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Кобур"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.ProtectionLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Protection")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("ProtectionLevel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Protection = "Екстремно"
                        },
                        new
                        {
                            Id = 2,
                            Protection = "Здраво"
                        },
                        new
                        {
                            Id = 3,
                            Protection = "Средно"
                        },
                        new
                        {
                            Id = 4,
                            Protection = "Слабо"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.OSNameAndVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OSNameId")
                        .HasColumnType("int");

                    b.Property<int>("OSVersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OSNameId");

                    b.HasIndex("OSVersionId");

                    b.ToTable("OSNameAndVersion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OSNameId = 1,
                            OSVersionId = 1
                        },
                        new
                        {
                            Id = 2,
                            OSNameId = 1,
                            OSVersionId = 2
                        },
                        new
                        {
                            Id = 3,
                            OSNameId = 1,
                            OSVersionId = 3
                        },
                        new
                        {
                            Id = 4,
                            OSNameId = 1,
                            OSVersionId = 4
                        },
                        new
                        {
                            Id = 5,
                            OSNameId = 1,
                            OSVersionId = 5
                        },
                        new
                        {
                            Id = 6,
                            OSNameId = 1,
                            OSVersionId = 7
                        },
                        new
                        {
                            Id = 7,
                            OSNameId = 1,
                            OSVersionId = 8
                        },
                        new
                        {
                            Id = 8,
                            OSNameId = 1,
                            OSVersionId = 9
                        },
                        new
                        {
                            Id = 9,
                            OSNameId = 1,
                            OSVersionId = 10
                        },
                        new
                        {
                            Id = 10,
                            OSNameId = 1,
                            OSVersionId = 11
                        },
                        new
                        {
                            Id = 11,
                            OSNameId = 1,
                            OSVersionId = 12
                        },
                        new
                        {
                            Id = 12,
                            OSNameId = 1,
                            OSVersionId = 13
                        },
                        new
                        {
                            Id = 13,
                            OSNameId = 2,
                            OSVersionId = 1
                        },
                        new
                        {
                            Id = 14,
                            OSNameId = 2,
                            OSVersionId = 2
                        },
                        new
                        {
                            Id = 15,
                            OSNameId = 2,
                            OSVersionId = 3
                        },
                        new
                        {
                            Id = 16,
                            OSNameId = 2,
                            OSVersionId = 4
                        },
                        new
                        {
                            Id = 17,
                            OSNameId = 2,
                            OSVersionId = 5
                        },
                        new
                        {
                            Id = 18,
                            OSNameId = 2,
                            OSVersionId = 7
                        },
                        new
                        {
                            Id = 19,
                            OSNameId = 2,
                            OSVersionId = 8
                        },
                        new
                        {
                            Id = 20,
                            OSNameId = 2,
                            OSVersionId = 9
                        },
                        new
                        {
                            Id = 21,
                            OSNameId = 2,
                            OSVersionId = 10
                        },
                        new
                        {
                            Id = 22,
                            OSNameId = 2,
                            OSVersionId = 11
                        },
                        new
                        {
                            Id = 23,
                            OSNameId = 2,
                            OSVersionId = 12
                        },
                        new
                        {
                            Id = 24,
                            OSNameId = 2,
                            OSVersionId = 13
                        },
                        new
                        {
                            Id = 25,
                            OSNameId = 2,
                            OSVersionId = 15
                        },
                        new
                        {
                            Id = 26,
                            OSNameId = 2,
                            OSVersionId = 16
                        },
                        new
                        {
                            Id = 27,
                            OSNameId = 2,
                            OSVersionId = 17
                        },
                        new
                        {
                            Id = 28,
                            OSNameId = 2,
                            OSVersionId = 18
                        },
                        new
                        {
                            Id = 29,
                            OSNameId = 2,
                            OSVersionId = 19
                        },
                        new
                        {
                            Id = 30,
                            OSNameId = 3,
                            OSVersionId = 1
                        },
                        new
                        {
                            Id = 31,
                            OSNameId = 3,
                            OSVersionId = 2
                        },
                        new
                        {
                            Id = 32,
                            OSNameId = 3,
                            OSVersionId = 3
                        },
                        new
                        {
                            Id = 33,
                            OSNameId = 3,
                            OSVersionId = 4
                        },
                        new
                        {
                            Id = 34,
                            OSNameId = 3,
                            OSVersionId = 5
                        },
                        new
                        {
                            Id = 35,
                            OSNameId = 4,
                            OSVersionId = 1
                        },
                        new
                        {
                            Id = 36,
                            OSNameId = 4,
                            OSVersionId = 2
                        },
                        new
                        {
                            Id = 37,
                            OSNameId = 4,
                            OSVersionId = 3
                        },
                        new
                        {
                            Id = 38,
                            OSNameId = 4,
                            OSVersionId = 4
                        },
                        new
                        {
                            Id = 39,
                            OSNameId = 4,
                            OSVersionId = 5
                        },
                        new
                        {
                            Id = 40,
                            OSNameId = 4,
                            OSVersionId = 7
                        },
                        new
                        {
                            Id = 41,
                            OSNameId = 4,
                            OSVersionId = 8
                        },
                        new
                        {
                            Id = 42,
                            OSNameId = 4,
                            OSVersionId = 9
                        },
                        new
                        {
                            Id = 43,
                            OSNameId = 4,
                            OSVersionId = 10
                        },
                        new
                        {
                            Id = 44,
                            OSNameId = 4,
                            OSVersionId = 11
                        },
                        new
                        {
                            Id = 45,
                            OSNameId = 4,
                            OSVersionId = 12
                        },
                        new
                        {
                            Id = 46,
                            OSNameId = 4,
                            OSVersionId = 13
                        },
                        new
                        {
                            Id = 47,
                            OSNameId = 4,
                            OSVersionId = 14
                        },
                        new
                        {
                            Id = 48,
                            OSNameId = 4,
                            OSVersionId = 15
                        },
                        new
                        {
                            Id = 49,
                            OSNameId = 5,
                            OSVersionId = 1
                        },
                        new
                        {
                            Id = 50,
                            OSNameId = 5,
                            OSVersionId = 2
                        },
                        new
                        {
                            Id = 51,
                            OSNameId = 5,
                            OSVersionId = 3
                        },
                        new
                        {
                            Id = 52,
                            OSNameId = 5,
                            OSVersionId = 4
                        },
                        new
                        {
                            Id = 53,
                            OSNameId = 5,
                            OSVersionId = 5
                        },
                        new
                        {
                            Id = 54,
                            OSNameId = 5,
                            OSVersionId = 7
                        },
                        new
                        {
                            Id = 55,
                            OSNameId = 6,
                            OSVersionId = 8
                        },
                        new
                        {
                            Id = 56,
                            OSNameId = 6,
                            OSVersionId = 9
                        },
                        new
                        {
                            Id = 57,
                            OSNameId = 6,
                            OSVersionId = 11
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.OperatingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OSName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("OperatingSystems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OSName = "Android"
                        },
                        new
                        {
                            Id = 2,
                            OSName = "iOS"
                        },
                        new
                        {
                            Id = 3,
                            OSName = "HarmonyOS"
                        },
                        new
                        {
                            Id = 4,
                            OSName = "MIUI"
                        },
                        new
                        {
                            Id = 5,
                            OSName = "One UI"
                        },
                        new
                        {
                            Id = 6,
                            OSName = "Windows Phone"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.OperatingSystemVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("OSVersion")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("OperatingSystemVersion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OSVersion = 1.0m
                        },
                        new
                        {
                            Id = 2,
                            OSVersion = 2.0m
                        },
                        new
                        {
                            Id = 3,
                            OSVersion = 3.0m
                        },
                        new
                        {
                            Id = 4,
                            OSVersion = 4.0m
                        },
                        new
                        {
                            Id = 5,
                            OSVersion = 5.0m
                        },
                        new
                        {
                            Id = 6,
                            OSVersion = 5.5m
                        },
                        new
                        {
                            Id = 7,
                            OSVersion = 6.0m
                        },
                        new
                        {
                            Id = 8,
                            OSVersion = 7.0m
                        },
                        new
                        {
                            Id = 9,
                            OSVersion = 8.0m
                        },
                        new
                        {
                            Id = 10,
                            OSVersion = 9.0m
                        },
                        new
                        {
                            Id = 11,
                            OSVersion = 10.0m
                        },
                        new
                        {
                            Id = 12,
                            OSVersion = 11.0m
                        },
                        new
                        {
                            Id = 13,
                            OSVersion = 12.0m
                        },
                        new
                        {
                            Id = 14,
                            OSVersion = 12.5m
                        },
                        new
                        {
                            Id = 15,
                            OSVersion = 13.0m
                        },
                        new
                        {
                            Id = 16,
                            OSVersion = 14.0m
                        },
                        new
                        {
                            Id = 17,
                            OSVersion = 15.0m
                        },
                        new
                        {
                            Id = 18,
                            OSVersion = 16.0m
                        },
                        new
                        {
                            Id = 19,
                            OSVersion = 17.0m
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("CameraCount")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Camera");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CameraCount = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            CameraCount = (byte)2
                        },
                        new
                        {
                            Id = 3,
                            CameraCount = (byte)3
                        },
                        new
                        {
                            Id = 4,
                            CameraCount = (byte)4
                        },
                        new
                        {
                            Id = 5,
                            CameraCount = (byte)5
                        },
                        new
                        {
                            Id = 6,
                            CameraCount = (byte)6
                        },
                        new
                        {
                            Id = 7,
                            CameraCount = (byte)7
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.DisplayTechnology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("DisplayTechnology");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LCD"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LED"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mini LED"
                        },
                        new
                        {
                            Id = 4,
                            Name = "OLED"
                        },
                        new
                        {
                            Id = 5,
                            Name = "POLED"
                        },
                        new
                        {
                            Id = 6,
                            Name = "AMOLED"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Retina"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.Memory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RAM")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Memory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RAM = 1
                        },
                        new
                        {
                            Id = 2,
                            RAM = 2
                        },
                        new
                        {
                            Id = 3,
                            RAM = 3
                        },
                        new
                        {
                            Id = 4,
                            RAM = 4
                        },
                        new
                        {
                            Id = 5,
                            RAM = 5
                        },
                        new
                        {
                            Id = 6,
                            RAM = 6
                        },
                        new
                        {
                            Id = 7,
                            RAM = 7
                        },
                        new
                        {
                            Id = 8,
                            RAM = 8
                        },
                        new
                        {
                            Id = 9,
                            RAM = 10
                        },
                        new
                        {
                            Id = 10,
                            RAM = 12
                        },
                        new
                        {
                            Id = 11,
                            RAM = 14
                        },
                        new
                        {
                            Id = 12,
                            RAM = 16
                        },
                        new
                        {
                            Id = 13,
                            RAM = 18
                        },
                        new
                        {
                            Id = 14,
                            RAM = 20
                        },
                        new
                        {
                            Id = 15,
                            RAM = 22
                        },
                        new
                        {
                            Id = 16,
                            RAM = 24
                        },
                        new
                        {
                            Id = 17,
                            RAM = 26
                        },
                        new
                        {
                            Id = 18,
                            RAM = 28
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.StorageCapacity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CapacityGB")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("StorageCapacity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacityGB = 8m
                        },
                        new
                        {
                            Id = 2,
                            CapacityGB = 12m
                        },
                        new
                        {
                            Id = 3,
                            CapacityGB = 16m
                        },
                        new
                        {
                            Id = 4,
                            CapacityGB = 24m
                        },
                        new
                        {
                            Id = 5,
                            CapacityGB = 32m
                        },
                        new
                        {
                            Id = 6,
                            CapacityGB = 48m
                        },
                        new
                        {
                            Id = 7,
                            CapacityGB = 64m
                        },
                        new
                        {
                            Id = 8,
                            CapacityGB = 86m
                        },
                        new
                        {
                            Id = 9,
                            CapacityGB = 128m
                        },
                        new
                        {
                            Id = 10,
                            CapacityGB = 196m
                        },
                        new
                        {
                            Id = 11,
                            CapacityGB = 256m
                        },
                        new
                        {
                            Id = 12,
                            CapacityGB = 384m
                        },
                        new
                        {
                            Id = 13,
                            CapacityGB = 420m
                        },
                        new
                        {
                            Id = 14,
                            CapacityGB = 512m
                        },
                        new
                        {
                            Id = 15,
                            CapacityGB = 786m
                        },
                        new
                        {
                            Id = 16,
                            CapacityGB = 1024m
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.USB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("USB");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "USB-A"
                        },
                        new
                        {
                            Id = 2,
                            Type = "USB-B"
                        },
                        new
                        {
                            Id = 3,
                            Type = "USB-C"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Mini-USB"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Micro-USB"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Lightning"
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.UserProfilePic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfilePics");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Phone", b =>
                {
                    b.HasBaseType("ArtFusionStudio.Models.Product");

                    b.Property<int>("CamerasId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayTechnologyId")
                        .HasColumnType("int");

                    b.Property<int>("OSNameAndVersionId")
                        .HasColumnType("int");

                    b.Property<int>("RAMMemoryId")
                        .HasColumnType("int");

                    b.Property<int>("StorageCapacityId")
                        .HasColumnType("int");

                    b.Property<int>("USBTypeId")
                        .HasColumnType("int");

                    b.HasIndex("CamerasId");

                    b.HasIndex("DisplayTechnologyId");

                    b.HasIndex("OSNameAndVersionId");

                    b.HasIndex("RAMMemoryId");

                    b.HasIndex("StorageCapacityId");

                    b.HasIndex("USBTypeId");

                    b.HasDiscriminator().HasValue("Phone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            CurrentPrice = 2699.99m,
                            Description = "Вече има нещо по-твърдо от легендарната Nokia 3220",
                            Name = "Iphone 15 Pro",
                            OldPrice = 2999.99m,
                            ProductURL = "iphone_15_pro.png",
                            Quantity = 142,
                            Score = 1202,
                            TotalVotes = 251,
                            CamerasId = 5,
                            DisplayTechnologyId = 4,
                            OSNameAndVersionId = 29,
                            RAMMemoryId = 8,
                            StorageCapacityId = 14,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 1,
                            CurrentPrice = 799.99m,
                            Description = "Водещ смартфон от Huawei",
                            Name = "Huawei P40 Pro",
                            OldPrice = 899.99m,
                            ProductURL = "huawei_p40_pro.png",
                            Quantity = 72,
                            Score = 167,
                            TotalVotes = 35,
                            CamerasId = 5,
                            DisplayTechnologyId = 4,
                            OSNameAndVersionId = 18,
                            RAMMemoryId = 8,
                            StorageCapacityId = 6,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryId = 1,
                            CurrentPrice = 999.99m,
                            Description = "Висок клас смартфон, проектиран за мултимедия",
                            Name = "Sony Xperia 1 II",
                            OldPrice = 1099.99m,
                            ProductURL = "sony_xperia_1_ii.png",
                            Quantity = 205,
                            Score = 1842,
                            TotalVotes = 420,
                            CamerasId = 4,
                            DisplayTechnologyId = 3,
                            OSNameAndVersionId = 3,
                            RAMMemoryId = 9,
                            StorageCapacityId = 12,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            CategoryId = 1,
                            CurrentPrice = 1199.99m,
                            Description = "Най-висок клас смартфон със завършени функции",
                            Name = "Samsung Galaxy S21 Ultra",
                            OldPrice = 1299.99m,
                            ProductURL = "samsung_galaxy_s21_ultra.png",
                            Quantity = 103,
                            Score = 27,
                            TotalVotes = 7,
                            CamerasId = 5,
                            DisplayTechnologyId = 5,
                            OSNameAndVersionId = 18,
                            RAMMemoryId = 10,
                            StorageCapacityId = 14,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            CategoryId = 1,
                            CurrentPrice = 599.99m,
                            Description = "Иновативен смартфон с акцент върху качеството на камерата",
                            Name = "Nokia 9 PureView",
                            OldPrice = 699.99m,
                            ProductURL = "nokia_9_pureview.png",
                            Quantity = 221,
                            Score = 107,
                            TotalVotes = 26,
                            CamerasId = 1,
                            DisplayTechnologyId = 4,
                            OSNameAndVersionId = 3,
                            RAMMemoryId = 6,
                            StorageCapacityId = 7,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            CategoryId = 1,
                            CurrentPrice = 1199.99m,
                            Description = "Най-големият и най-мощният iPhone досега",
                            Name = "iPhone 14 Pro",
                            OldPrice = 1299.99m,
                            ProductURL = "iphone_14_pro.png",
                            Quantity = 45,
                            Score = 108,
                            TotalVotes = 40,
                            CamerasId = 5,
                            DisplayTechnologyId = 6,
                            OSNameAndVersionId = 6,
                            RAMMemoryId = 7,
                            StorageCapacityId = 10,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 2,
                            CategoryId = 1,
                            CurrentPrice = 899.99m,
                            Description = "Премиум смартфон с изкуство на режещата технология",
                            Name = "Huawei Mate X3",
                            OldPrice = 999.99m,
                            ProductURL = "huawei_mate_x3.png",
                            Quantity = 147,
                            Score = 317,
                            TotalVotes = 88,
                            CamerasId = 5,
                            DisplayTechnologyId = 5,
                            OSNameAndVersionId = 18,
                            RAMMemoryId = 7,
                            StorageCapacityId = 9,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 3,
                            CategoryId = 1,
                            CurrentPrice = 799.99m,
                            Description = "Компактен, но мощен смартфон за игри и мултимедия",
                            Name = "Sony Xperia 5 II",
                            OldPrice = 899.99m,
                            ProductURL = "sony_xperia_5_ii.png",
                            Quantity = 38,
                            Score = 340,
                            TotalVotes = 100,
                            CamerasId = 4,
                            DisplayTechnologyId = 2,
                            OSNameAndVersionId = 3,
                            RAMMemoryId = 9,
                            StorageCapacityId = 11,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 4,
                            CategoryId = 1,
                            CurrentPrice = 1099.99m,
                            Description = "Флагмански фаблет с функционалност на S Pen",
                            Name = "Samsung S24",
                            OldPrice = 1199.99m,
                            ProductURL = "samsung_s24.png",
                            Quantity = 184,
                            Score = 793,
                            TotalVotes = 169,
                            CamerasId = 5,
                            DisplayTechnologyId = 6,
                            OSNameAndVersionId = 18,
                            RAMMemoryId = 10,
                            StorageCapacityId = 15,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 5,
                            CategoryId = 1,
                            CurrentPrice = 599.99m,
                            Description = "5G-съвместим смартфон с технология PureDisplay",
                            Name = "Nokia G42",
                            OldPrice = 699.99m,
                            ProductURL = "nokia_g42.png",
                            Quantity = 196,
                            Score = 936,
                            TotalVotes = 195,
                            CamerasId = 4,
                            DisplayTechnologyId = 7,
                            OSNameAndVersionId = 3,
                            RAMMemoryId = 8,
                            StorageCapacityId = 5,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 1,
                            CategoryId = 1,
                            CurrentPrice = 349.99m,
                            Description = "Компактен и достъпен модел iPhone",
                            Name = "iPhone SE",
                            OldPrice = 399.99m,
                            ProductURL = "iphone_se.png",
                            Quantity = 189,
                            Score = 242,
                            TotalVotes = 69,
                            CamerasId = 2,
                            DisplayTechnologyId = 5,
                            OSNameAndVersionId = 6,
                            RAMMemoryId = 11,
                            StorageCapacityId = 2,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 2,
                            CategoryId = 1,
                            CurrentPrice = 699.99m,
                            Description = "Предишен флагман с впечатляващи възможности на камерата",
                            Name = "Huawei P60",
                            OldPrice = 799.99m,
                            ProductURL = "huawei_p60.png",
                            Quantity = 35,
                            Score = 119,
                            TotalVotes = 35,
                            CamerasId = 4,
                            DisplayTechnologyId = 1,
                            OSNameAndVersionId = 18,
                            RAMMemoryId = 8,
                            StorageCapacityId = 4,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 3,
                            CategoryId = 1,
                            CurrentPrice = 699.99m,
                            Description = "Стройен смартфон с върхови мултимедийни възможности",
                            Name = "Sony Xperia",
                            OldPrice = 799.99m,
                            ProductURL = "sony_xperia.png",
                            Quantity = 127,
                            Score = 37,
                            TotalVotes = 17,
                            CamerasId = 3,
                            DisplayTechnologyId = 3,
                            OSNameAndVersionId = 3,
                            RAMMemoryId = 5,
                            StorageCapacityId = 3,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 4,
                            CategoryId = 1,
                            CurrentPrice = 449.99m,
                            Description = "Достъпен смартфон с разнообразни възможности на камерата",
                            Name = "Samsung Galaxy Z",
                            OldPrice = 499.99m,
                            ProductURL = "samsung_galaxy_z.png",
                            Quantity = 35,
                            Score = 176,
                            TotalVotes = 42,
                            CamerasId = 3,
                            DisplayTechnologyId = 3,
                            OSNameAndVersionId = 18,
                            RAMMemoryId = 7,
                            StorageCapacityId = 13,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 5,
                            CategoryId = 1,
                            CurrentPrice = 349.99m,
                            Description = "Стилен смартфон с Zeiss Optics",
                            Name = "Nokia c210",
                            OldPrice = 399.99m,
                            ProductURL = "nokia_c210.png",
                            Quantity = 78,
                            Score = 200,
                            TotalVotes = 69,
                            CamerasId = 2,
                            DisplayTechnologyId = 3,
                            OSNameAndVersionId = 3,
                            RAMMemoryId = 5,
                            StorageCapacityId = 1,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 1,
                            CategoryId = 1,
                            CurrentPrice = 549.99m,
                            Description = "Цветен и бюджетен модел iPhone",
                            Name = "iPhone XR",
                            OldPrice = 599.99m,
                            ProductURL = "iphone_xr.png",
                            Quantity = 12,
                            Score = 48,
                            TotalVotes = 12,
                            CamerasId = 2,
                            DisplayTechnologyId = 3,
                            OSNameAndVersionId = 6,
                            RAMMemoryId = 8,
                            StorageCapacityId = 16,
                            USBTypeId = 6
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 2,
                            CategoryId = 1,
                            CurrentPrice = 449.99m,
                            Description = "Стилен смартфон с фокус върху селфитата",
                            Name = "Huawei nova 7",
                            OldPrice = 499.99m,
                            ProductURL = "huawei_nova_7.png",
                            Quantity = 201,
                            Score = 299,
                            TotalVotes = 73,
                            CamerasId = 3,
                            DisplayTechnologyId = 3,
                            OSNameAndVersionId = 18,
                            RAMMemoryId = 7,
                            StorageCapacityId = 8,
                            USBTypeId = 3
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 3,
                            CategoryId = 1,
                            CurrentPrice = 299.99m,
                            Description = "Достъпен смартфон с висок дисплей",
                            Name = "Sony Xperia 10",
                            OldPrice = 349.99m,
                            ProductURL = "sony_xperia_10.png",
                            Quantity = 145,
                            Score = 182,
                            TotalVotes = 48,
                            CamerasId = 2,
                            DisplayTechnologyId = 3,
                            OSNameAndVersionId = 3,
                            RAMMemoryId = 4,
                            StorageCapacityId = 2,
                            USBTypeId = 3
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.Case", b =>
                {
                    b.HasBaseType("ArtFusionStudio.Models.Product");

                    b.Property<int>("CaseMaterialId")
                        .HasColumnType("int");

                    b.Property<int>("CaseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProtectionLevelId")
                        .HasColumnType("int");

                    b.HasIndex("CaseMaterialId");

                    b.HasIndex("CaseTypeId");

                    b.HasIndex("ProtectionLevelId");

                    b.HasDiscriminator().HasValue("Case");

                    b.HasData(
                        new
                        {
                            Id = 38,
                            BrandId = 3,
                            CategoryId = 2,
                            CurrentPrice = 19.99m,
                            Description = "Премиум кожен калъф с отделения за карти за Sony Xperia 5, предлагащ защита и функционалност.",
                            Name = "Кожен калъф с портмоне за Sony Xperia 5",
                            OldPrice = 24.99m,
                            ProductURL = "sony_xperia_5_case.png",
                            Quantity = 128,
                            Score = 200,
                            TotalVotes = 50,
                            CaseMaterialId = 6,
                            CaseTypeId = 5,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 39,
                            BrandId = 4,
                            CategoryId = 2,
                            CurrentPrice = 16.99m,
                            Description = "Здрав и издръжлив калъф Armor за Samsung Galaxy S20 със стилен дизайн и отлични възможности за абсорбиране на удари.",
                            Name = "Калъф Armor за Samsung Galaxy S20",
                            OldPrice = 21.99m,
                            ProductURL = "samsung_galaxy_s20_case.png",
                            Quantity = 256,
                            Score = 190,
                            TotalVotes = 45,
                            CaseMaterialId = 2,
                            CaseTypeId = 3,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 40,
                            BrandId = 5,
                            CategoryId = 2,
                            CurrentPrice = 13.99m,
                            Description = "Хибриден калъф за Nokia 7.2, комбиниращ твърд гръб от PC с гъвкав TPU бампер за двоен защитен слой срещу удари и счупвания.",
                            Name = "Хибриден калъф за Nokia 7.2",
                            OldPrice = 18.99m,
                            ProductURL = "nokia_7_2_case.png",
                            Quantity = 64,
                            Score = 160,
                            TotalVotes = 42,
                            CaseMaterialId = 3,
                            CaseTypeId = 2,
                            ProtectionLevelId = 2
                        },
                        new
                        {
                            Id = 41,
                            BrandId = 5,
                            CategoryId = 2,
                            CurrentPrice = 17.99m,
                            Description = "Уникален калъф с геометричен дизайн за Nokia 9 PureView, предпазващ го от надрасквания и падания.",
                            Name = "Модерен калъф за Nokia 9 PureView",
                            OldPrice = 22.99m,
                            ProductURL = "nokia_9_pureview_case.png",
                            Quantity = 256,
                            Score = 160,
                            TotalVotes = 55,
                            CaseMaterialId = 5,
                            CaseTypeId = 2,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 42,
                            BrandId = 4,
                            CategoryId = 2,
                            CurrentPrice = 15.99m,
                            Description = "Удобен и гъвкав калъф за Samsung Galaxy A72, осигуряващ защита от удари и надрасквания.",
                            Name = "Силиконов калъф за Samsung Galaxy A72",
                            OldPrice = 19.99m,
                            ProductURL = "samsung_galaxy_a72_case.png",
                            Quantity = 128,
                            Score = 170,
                            TotalVotes = 60,
                            CaseMaterialId = 1,
                            CaseTypeId = 2,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 43,
                            BrandId = 3,
                            CategoryId = 2,
                            CurrentPrice = 16.99m,
                            Description = "Елегантен калъф от естествена кожа за Sony Xperia 10 II, с дискретен лого на бранда.",
                            Name = "Луксозен калъф за Sony Xperia 10 II",
                            OldPrice = 21.99m,
                            ProductURL = "sony_xperia_10_ii_case.png",
                            Quantity = 256,
                            Score = 210,
                            TotalVotes = 70,
                            CaseMaterialId = 8,
                            CaseTypeId = 2,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 44,
                            BrandId = 4,
                            CategoryId = 2,
                            CurrentPrice = 21.99m,
                            Description = "Лек и гъвкав калъф за Samsung Galaxy S21, идеален за фитнес и спортни занимания.",
                            Name = "Спортен калъф за Samsung Galaxy S21",
                            OldPrice = 27.99m,
                            ProductURL = "samsung_galaxy_s21_case.png",
                            Quantity = 64,
                            Score = 180,
                            TotalVotes = 60,
                            CaseMaterialId = 1,
                            CaseTypeId = 3,
                            ProtectionLevelId = 2
                        },
                        new
                        {
                            Id = 45,
                            BrandId = 2,
                            CategoryId = 2,
                            CurrentPrice = 20.99m,
                            Description = "Калъф с двойна защита за Huawei Mate 40, предпазващ го от удари и надрасквания.",
                            Name = "Антишок калъф за Huawei Mate 40",
                            OldPrice = 26.99m,
                            ProductURL = "huawei_mate_40_case.png",
                            Quantity = 256,
                            Score = 140,
                            TotalVotes = 48,
                            CaseMaterialId = 7,
                            CaseTypeId = 3,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 46,
                            BrandId = 1,
                            CategoryId = 2,
                            CurrentPrice = 19.99m,
                            Description = "Ръчно изработен кожен калъф за iPhone 12 Pro, с вграден магнит за по-сигурно затваряне.",
                            Name = "Кожен калъф за iPhone 12 Pro",
                            OldPrice = 29.99m,
                            ProductURL = "iphone_12_pro_case.png",
                            Quantity = 256,
                            Score = 110,
                            TotalVotes = 50,
                            CaseMaterialId = 1,
                            CaseTypeId = 1,
                            ProtectionLevelId = 2
                        },
                        new
                        {
                            Id = 47,
                            BrandId = 5,
                            CategoryId = 2,
                            CurrentPrice = 11.99m,
                            Description = "Универсален калъф за съхранение на различни аксесоари като слушалки, зарядни и USB кабели.",
                            Name = "Метален калъф за Nokia 3310",
                            OldPrice = 14.99m,
                            ProductURL = "nokia_3310_case.png",
                            Quantity = 256,
                            Score = 144,
                            TotalVotes = 42,
                            CaseMaterialId = 8,
                            CaseTypeId = 10,
                            ProtectionLevelId = 1
                        },
                        new
                        {
                            Id = 48,
                            BrandId = 5,
                            CategoryId = 2,
                            CurrentPrice = 15.99m,
                            Description = "Лек и гъвкав калъф за Nokia 8.3, идеален за спорт и фитнес занимания.",
                            Name = "Спортен калъф за Nokia 8.3",
                            OldPrice = 19.99m,
                            ProductURL = "nokia_8_3_case.png",
                            Quantity = 128,
                            Score = 160,
                            TotalVotes = 40,
                            CaseMaterialId = 4,
                            CaseTypeId = 3,
                            ProtectionLevelId = 2
                        },
                        new
                        {
                            Id = 49,
                            BrandId = 1,
                            CategoryId = 2,
                            CurrentPrice = 18.99m,
                            Description = "Елегантен калъф за iPhone SE, изработен от качествени материали и със стилно лого на Apple.",
                            Name = "Стилен калъф за iPhone SE",
                            OldPrice = 22.99m,
                            ProductURL = "iphone_se_case.png",
                            Quantity = 256,
                            Score = 220,
                            TotalVotes = 55,
                            CaseMaterialId = 6,
                            CaseTypeId = 1,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 50,
                            BrandId = 6,
                            CategoryId = 2,
                            CurrentPrice = 21.99m,
                            Description = "Персонализиран калъф с избрана от вас снимка или дизайн, създаден специално за вашия телефон.",
                            Name = "Персонализиран калъф",
                            OldPrice = 25.99m,
                            ProductURL = "custom_case_02.png",
                            Quantity = 128,
                            Score = 200,
                            TotalVotes = 50,
                            CaseMaterialId = 1,
                            CaseTypeId = 2,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 51,
                            BrandId = 4,
                            CategoryId = 2,
                            CurrentPrice = 16.99m,
                            Description = "Калъф с грапава повърхност за по-добро захващане на Samsung Galaxy A51, съчетаващ защита и стил.",
                            Name = "Грапав калъф за Samsung Galaxy A51",
                            OldPrice = 21.99m,
                            ProductURL = "samsung_galaxy_a51_case.png",
                            Quantity = 64,
                            Score = 240,
                            TotalVotes = 60,
                            CaseMaterialId = 8,
                            CaseTypeId = 2,
                            ProtectionLevelId = 2
                        },
                        new
                        {
                            Id = 52,
                            BrandId = 6,
                            CategoryId = 2,
                            CurrentPrice = 11.99m,
                            Description = "Компактен калъф за съхранение на различни аксесоари като кабели, USB устройства и зарядни устройства.",
                            Name = "Компактен калъф за аксесоари",
                            OldPrice = 14.99m,
                            ProductURL = "accessories_case_03.png",
                            Quantity = 256,
                            Score = 140,
                            TotalVotes = 35,
                            CaseMaterialId = 6,
                            CaseTypeId = 9,
                            ProtectionLevelId = 2
                        },
                        new
                        {
                            Id = 53,
                            BrandId = 3,
                            CategoryId = 2,
                            CurrentPrice = 20.99m,
                            Description = "Калъф с водоустойчива защита за Sony Xperia 1 II, предпазващ го от вода и влага.",
                            Name = "Водоустойчив калъф за Sony Xperia 1 II",
                            OldPrice = 26.99m,
                            ProductURL = "sony_xperia_1_ii_case.png",
                            Quantity = 256,
                            Score = 180,
                            TotalVotes = 45,
                            CaseMaterialId = 7,
                            CaseTypeId = 8,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 54,
                            BrandId = 2,
                            CategoryId = 2,
                            CurrentPrice = 18.99m,
                            Description = "Калъф със странична защита за Huawei Mate 30 Pro, предпазващ го от удари и надрасквания.",
                            Name = "Страничен калъф за Huawei Mate 30 Pro",
                            OldPrice = 23.99m,
                            ProductURL = "huawei_mate_30_pro_case.png",
                            Quantity = 256,
                            Score = 220,
                            TotalVotes = 55,
                            CaseMaterialId = 2,
                            CaseTypeId = 4,
                            ProtectionLevelId = 2
                        },
                        new
                        {
                            Id = 55,
                            BrandId = 5,
                            CategoryId = 2,
                            CurrentPrice = 15.99m,
                            Description = "Калъф с удароустойчиви материали за Nokia 5.4, предпазващ го от счупване при падане.",
                            Name = "Удароустойчив калъф за Nokia 5.4",
                            OldPrice = 19.99m,
                            ProductURL = "nokia_5_4_case.png",
                            Quantity = 64,
                            Score = 250,
                            TotalVotes = 50,
                            CaseMaterialId = 3,
                            CaseTypeId = 7,
                            ProtectionLevelId = 3
                        },
                        new
                        {
                            Id = 56,
                            BrandId = 4,
                            CategoryId = 2,
                            CurrentPrice = 22.99m,
                            Description = "Елегантен калъф за Samsung Galaxy Note 20, изработен от висококачествени материали и със стилен дизайн.",
                            Name = "Луксозен калъф за Samsung Galaxy Note 20",
                            OldPrice = 28.99m,
                            ProductURL = "samsung_galaxy_note_20_case.png",
                            Quantity = 128,
                            Score = 260,
                            TotalVotes = 65,
                            CaseMaterialId = 1,
                            CaseTypeId = 1,
                            ProtectionLevelId = 3
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.Charger", b =>
                {
                    b.HasBaseType("ArtFusionStudio.Models.Product");

                    b.Property<bool>("FastChargingSupported")
                        .HasColumnType("bit");

                    b.Property<int>("OutputCurrent")
                        .HasColumnType("int");

                    b.Property<int>("OutputVoltage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Charger");

                    b.HasData(
                        new
                        {
                            Id = 19,
                            BrandId = 1,
                            CategoryId = 3,
                            CurrentPrice = 12.99m,
                            Description = "Високоскоростен зарядно за различни устройства.",
                            Name = "Зареждащ адаптер",
                            OldPrice = 15.99m,
                            ProductURL = "fast_charging_adapter.png",
                            Quantity = 256,
                            Score = 327,
                            TotalVotes = 125,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 6,
                            CategoryId = 3,
                            CurrentPrice = 9.99m,
                            Description = "Компактно зарядно с множество USB портове.",
                            Name = "Универсално USB зарядно",
                            OldPrice = 12.49m,
                            ProductURL = "universal_usb_charger.png",
                            Quantity = 512,
                            Score = 522,
                            TotalVotes = 234,
                            FastChargingSupported = false,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 2,
                            CategoryId = 3,
                            CurrentPrice = 19.99m,
                            Description = "Безжично зареждане за Samsung устройства.",
                            Name = "Зареждаща подложка Samsung",
                            OldPrice = 24.99m,
                            ProductURL = "samsung_fast_charging_pad.png",
                            Quantity = 128,
                            Score = 312,
                            TotalVotes = 143,
                            FastChargingSupported = true,
                            OutputCurrent = 1,
                            OutputVoltage = 9
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 1,
                            CategoryId = 3,
                            CurrentPrice = 24.99m,
                            Description = "Зареждайте своя iPhone безжично с тази стилна подложка.",
                            Name = "Безжична зареждаща подложка за iPhone",
                            OldPrice = 29.99m,
                            ProductURL = "iphone_wireless_charging_pad.png",
                            Quantity = 64,
                            Score = 497,
                            TotalVotes = 216,
                            FastChargingSupported = true,
                            OutputCurrent = 1,
                            OutputVoltage = 9
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 3,
                            CategoryId = 3,
                            CurrentPrice = 15.99m,
                            Description = "Оригинален зарядно за бързо зареждане на вашето устройство Huawei.",
                            Name = "Зареждащ адаптер за Huawei",
                            OldPrice = 19.99m,
                            ProductURL = "huawei_quick_charge_adapter.png",
                            Quantity = 256,
                            Score = 372,
                            TotalVotes = 159,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 6,
                            CategoryId = 3,
                            CurrentPrice = 34.99m,
                            Description = "Зареждайте едновременно няколко устройства с тази зарядна станция.",
                            Name = "Мултипортово зарядно",
                            OldPrice = 39.99m,
                            ProductURL = "multi_port_charging_station.png",
                            Quantity = 128,
                            Score = 425,
                            TotalVotes = 184,
                            FastChargingSupported = false,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 2,
                            CategoryId = 3,
                            CurrentPrice = 22.99m,
                            Description = "Зареждайте своя Samsung удобно с тази безжична стойка.",
                            Name = "Безжична зареждаща стойка Samsung",
                            OldPrice = 27.99m,
                            ProductURL = "samsung_wireless_charging_stand.png",
                            Quantity = 512,
                            Score = 416,
                            TotalVotes = 178,
                            FastChargingSupported = true,
                            OutputCurrent = 1,
                            OutputVoltage = 9
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 1,
                            CategoryId = 3,
                            CurrentPrice = 14.99m,
                            Description = "Оригинален блок за бързо зареждане на вашето устройство iPhone.",
                            Name = "Зареждащ блок за iPhone",
                            OldPrice = 18.99m,
                            ProductURL = "iphone_fast_charging_block.png",
                            Quantity = 256,
                            Score = 456,
                            TotalVotes = 197,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 5,
                            CategoryId = 3,
                            CurrentPrice = 11.99m,
                            Description = "Зареждайте своя Nokia устройства бързо и сигурно с това USB C зарядно.",
                            Name = "USB с зарядно за Nokia",
                            OldPrice = 14.99m,
                            ProductURL = "nokia_usb_c_charger.png",
                            Quantity = 256,
                            Score = 391,
                            TotalVotes = 168,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 1,
                            CategoryId = 3,
                            CurrentPrice = 34.99m,
                            Description = "зареждане и стабилна връзка с този MagSafe зарядно.",
                            Name = "MagSafe зареждащо ъстройство за iPhone",
                            OldPrice = 39.99m,
                            ProductURL = "iphone_magsafe_charger.png",
                            Quantity = 128,
                            Score = 307,
                            TotalVotes = 122,
                            FastChargingSupported = true,
                            OutputCurrent = 1,
                            OutputVoltage = 9
                        },
                        new
                        {
                            Id = 29,
                            BrandId = 6,
                            CategoryId = 3,
                            CurrentPrice = 24.99m,
                            Description = "Преносим заряден резервоар за вашите устройства с бързо зареждане.",
                            Name = "Зареждащ Power Bank",
                            OldPrice = 29.99m,
                            ProductURL = "fast_charging_power_bank.png",
                            Quantity = 512,
                            Score = 337,
                            TotalVotes = 135,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 30,
                            BrandId = 3,
                            CategoryId = 3,
                            CurrentPrice = 14.99m,
                            Description = "Зареждане, докато сте в движение с това автомобилно зарядно устройство.",
                            Name = "Зарядно за кола Huawei Super Charge",
                            OldPrice = 17.99m,
                            ProductURL = "huawei_super_charge_car_charger.png",
                            Quantity = 256,
                            Score = 356,
                            TotalVotes = 149,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 31,
                            BrandId = 1,
                            CategoryId = 3,
                            CurrentPrice = 18.99m,
                            Description = "и лесно зареждане с този магнитен безжичен зарядчик.",
                            Name = "Магнитен Безжичен Зарядчик за iPhone",
                            OldPrice = 22.99m,
                            ProductURL = "iphone_magnetic_wireless_charger.png",
                            Quantity = 128,
                            Score = 368,
                            TotalVotes = 157,
                            FastChargingSupported = true,
                            OutputCurrent = 1,
                            OutputVoltage = 9
                        },
                        new
                        {
                            Id = 32,
                            BrandId = 2,
                            CategoryId = 3,
                            CurrentPrice = 29.99m,
                            Description = "Зареждайте вашите Samsung устройства безжично и на пътя.",
                            Name = "Безжичен Power Bank за Samsung",
                            OldPrice = 34.99m,
                            ProductURL = "samsung_wireless_power_bank.png",
                            Quantity = 512,
                            Score = 325,
                            TotalVotes = 132,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 33,
                            BrandId = 6,
                            CategoryId = 3,
                            CurrentPrice = 15.99m,
                            Description = "Зареждайте своите устройства бързо и ефективно с това зарядно устройство.",
                            Name = "USB с зарядно",
                            OldPrice = 19.99m,
                            ProductURL = "quick_charge_usb_c_adapter.png",
                            Quantity = 256,
                            Score = 348,
                            TotalVotes = 141,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 34,
                            BrandId = 1,
                            CategoryId = 3,
                            CurrentPrice = 24.99m,
                            Description = "Зареждайте своя iPhone в колата с това удобно зарядно.",
                            Name = "MagSafe автомобилно монтирано зарядно за iPhone",
                            OldPrice = 29.99m,
                            ProductURL = "iphone_magsafe_car_mount_charger.png",
                            Quantity = 128,
                            Score = 388,
                            TotalVotes = 169,
                            FastChargingSupported = true,
                            OutputCurrent = 1,
                            OutputVoltage = 9
                        },
                        new
                        {
                            Id = 35,
                            BrandId = 3,
                            CategoryId = 3,
                            CurrentPrice = 11.99m,
                            Description = "и ефективно зареждане за вашите Huawei устройства с това стенно зарядно.",
                            Name = "Huawei Super Charge стенно зарядно",
                            OldPrice = 14.99m,
                            ProductURL = "huawei_super_charge_wall_charger.png",
                            Quantity = 256,
                            Score = 332,
                            TotalVotes = 128,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 36,
                            BrandId = 5,
                            CategoryId = 3,
                            CurrentPrice = 7.99m,
                            Description = "Компактен и бърз кабел за зареждане на вашите Nokia устройства.",
                            Name = "Зареждащ кабел за Nokia",
                            OldPrice = 9.99m,
                            ProductURL = "nokia_fast_charging_cable.png",
                            Quantity = 512,
                            Score = 361,
                            TotalVotes = 152,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        },
                        new
                        {
                            Id = 37,
                            BrandId = 1,
                            CategoryId = 3,
                            CurrentPrice = 24.99m,
                            Description = "Power Delivery зарядно за вашето iPhone с бързо зареждане.",
                            Name = "iPhone PD зарядно",
                            OldPrice = 29.99m,
                            ProductURL = "iphone_pd_charger.png",
                            Quantity = 256,
                            Score = 355,
                            TotalVotes = 145,
                            FastChargingSupported = true,
                            OutputCurrent = 2,
                            OutputVoltage = 5
                        });
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Orders.ShoppingCart", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Orders.ShoppingCartItem", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.Orders.ShoppingCart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Product", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.Coupon", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.OSNameAndVersion", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.OperatingSystem", "OperatingSystem")
                        .WithMany()
                        .HasForeignKey("OSNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.OperatingSystemVersion", "OperatingSystemVersion")
                        .WithMany()
                        .HasForeignKey("OSVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperatingSystem");

                    b.Navigation("OperatingSystemVersion");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.UserProfilePic", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Phone", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.Camera", "Camera")
                        .WithMany()
                        .HasForeignKey("CamerasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.DisplayTechnology", "DisplayTechnology")
                        .WithMany()
                        .HasForeignKey("DisplayTechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.OSNameAndVersion", "OSNameAndVersion")
                        .WithMany()
                        .HasForeignKey("OSNameAndVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.Memory", "Memory")
                        .WithMany()
                        .HasForeignKey("RAMMemoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.StorageCapacity", "StorageCapacity")
                        .WithMany()
                        .HasForeignKey("StorageCapacityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneFeatures.Physical.USB", "USBType")
                        .WithMany()
                        .HasForeignKey("USBTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");

                    b.Navigation("DisplayTechnology");

                    b.Navigation("Memory");

                    b.Navigation("OSNameAndVersion");

                    b.Navigation("StorageCapacity");

                    b.Navigation("USBType");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.Case", b =>
                {
                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.CaseMaterial", "CaseMaterial")
                        .WithMany()
                        .HasForeignKey("CaseMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.CaseType", "CaseType")
                        .WithMany()
                        .HasForeignKey("CaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtFusionStudio.Models.ProductFeatures.PhoneAccessories.ProtectionLevel", "ProtectionLevel")
                        .WithMany()
                        .HasForeignKey("ProtectionLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseMaterial");

                    b.Navigation("CaseType");

                    b.Navigation("ProtectionLevel");
                });

            modelBuilder.Entity("ArtFusionStudio.Models.Orders.ShoppingCart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
